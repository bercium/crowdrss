<?php

/**
 * This is the model base class for the table "feed_rate".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FeedRate".
 *
 * Columns in table "feed_rate" available as properties of the model,
 * followed by relations of table "feed_rate" available as properties of the model.
 *
 * @property integer $id
 * @property integer $subscription_id
 * @property integer $project_id
 * @property integer $vote
 * @property integer $time_clicked
 *
 * @property Project $project
 * @property Subscription $subscription
 */
abstract class BaseFeedRate extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'feed_rate';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'FeedRate|FeedRates', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('subscription_id, project_id, vote', 'required'),
      array('time_clicked', 'default', 'value' => date('Y-m-d H:i:s'), 'setOnEmpty' => true, 'on' => 'insert'),
        
			array('subscription_id, project_id, vote', 'numerical', 'integerOnly'=>true),
			array('id, subscription_id, project_id, vote, time_clicked', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'project' => array(self::BELONGS_TO, 'Project', 'project_id'),
			'subscription' => array(self::BELONGS_TO, 'Subscription', 'subscription_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'subscription_id' => null,
			'project_id' => null,
			'vote' => Yii::t('app', 'Vote'),
			'time_clicked' => Yii::t('app', 'Time Clicked'),
			'project' => null,
			'subscription' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('subscription_id', $this->subscription_id);
		$criteria->compare('project_id', $this->project_id);
		$criteria->compare('vote', $this->vote);
		$criteria->compare('time_clicked', $this->time_clicked, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}