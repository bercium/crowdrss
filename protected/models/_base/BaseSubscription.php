<?php

/**
 * This is the model base class for the table "subscription".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Subscription".
 *
 * Columns in table "subscription" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $hash
 * @property string $email
 * @property integer $platform
 * @property integer $category
 * @property integer $rss
 * @property integer $email_time
 * @property integer $email_limit
 *
 */
abstract class BaseSubscription extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'subscription';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Subscription|Subscriptions', $n);
	}

	public static function representingColumn() {
		return 'hash';
	}

	public function rules() {
		return array(
			array('hash, email', 'required'),
			array('platform, category, rss, email_time, email_limit', 'numerical', 'integerOnly'=>true),
			array('hash', 'length', 'max'=>100),
			array('email', 'length', 'max'=>255),
			array('platform, category, rss, email_time, email_limit', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, hash, email, platform, category, rss, email_time, email_limit', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'hash' => Yii::t('app', 'Hash'),
			'email' => Yii::t('app', 'Email'),
			'platform' => Yii::t('app', 'Platform'),
			'category' => Yii::t('app', 'Category'),
			'rss' => Yii::t('app', 'Rss'),
			'email_time' => Yii::t('app', 'Email Time'),
			'email_limit' => Yii::t('app', 'Email Limit'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('hash', $this->hash, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('platform', $this->platform);
		$criteria->compare('category', $this->category);
		$criteria->compare('rss', $this->rss);
		$criteria->compare('email_time', $this->email_time);
		$criteria->compare('email_limit', $this->email_limit);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}